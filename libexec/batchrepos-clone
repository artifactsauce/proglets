#!/usr/bin/env bash
# Usage: batchrepos clone [BATCHREPOS_CLONE_ORGANIZATION, [BATCHREPOS_WORKING_DIRECTORY]]
# Summary: Clone all the organization's repositories from GitHub
# Help: 

set -eu

# Load configuration file
: ${BATCHREPOS_RESOURCE_FILE:="$HOME/.batchreposrc"}
if [ -f "$BATCHREPOS_RESOURCE_FILE" ]; then
  source "$BATCHREPOS_RESOURCE_FILE"
fi

# Set default values
: ${BATCHREPOS_CLONE_ORGANIZATION:=""}
: ${BATCHREPOS_WORKING_DIRECTORY:="$(pwd)"}
: ${BATCHREPOS_HTTP_PROXY:=""}
: ${GITHUB_OAUTH_TOKEN:=""}
: ${GITHUB_REPOSITORY_BASE_URI:="git@github.com"}
: ${GITHUB_API_BASE_URI:="https://api.github.com"}
: ${ROW:=100}
: ${REPOSITORY_IGNORE_FILE:="./repository-ignore.txt"}

# Check required values
if [ -z "$GITHUB_OAUTH_TOKEN" ]; then
  echo "[ERROR] Required ENV NOT declared: GITHUB_OAUTH_TOKEN" >&2
  exit 1
fi

# Get the path of working directory
if [ $# -ge 2 ]; then
  BATCHREPOS_WORKING_DIRECTORY="$2"
fi
if [ -z "$BATCHREPOS_WORKING_DIRECTORY" ]; then
  echo "[ERROR] Required ENV NOT declared: BATCHREPOS_WORKING_DIRECTORY" >&2
  exit 1
elif [ ! -d "$BATCHREPOS_WORKING_DIRECTORY" ]; then
  echo "[ERROR] Directory NOT exists: ${BATCHREPOS_WORKING_DIRECTORY}" >&2
  exit 1
fi
BATCHREPOS_WORKING_DIRECTORY=$(realpath "$BATCHREPOS_WORKING_DIRECTORY")

# Fetch repository list
if [ $# -ge 1 ]; then
  BATCHREPOS_CLONE_ORGANIZATION="$1"
fi
if [ -z "$BATCHREPOS_CLONE_ORGANIZATION" ]; then
  echo "[ERROR] Required ENV NOT declared: BATCHREPOS_CLONE_ORGANIZATION" >&2
  exit 1
fi
REPOSITORY_LIST=$(curl -H "Authorization: token ${GITHUB_OAUTH_TOKEN}" ${GITHUB_API_BASE_URI}/orgs/${BATCHREPOS_CLONE_ORGANIZATION}/repos?per_page=$ROW | jq ".[].name" | sed -e "s/\"//g" 2>/dev/null)
if [ -z "$REPOSITORY_LIST" ]; then
  echo "[ERROR] Failed to get repository list" >&2
  exit 1
fi

if [ -n "$BATCHREPOS_HTTP_PROXY" ]l then
  git config --global http.proxy "$BATCHREPOS_HTTP_PROXY"
fi

# Clone repository in order
while read REPOSITORY; do
  [[ "$REPOSITORY" =~ ^\# ]] && continue

  # Skip if exists in the repository ignore file
  if [ -f "$REPOSITORY_IGNORE_FILE" ]; then
    if grep -qw "${REPOSITORY}" "$REPOSITORY_IGNORE_FILE"; then
      echo "[WARN] Ignored repository: ${REPOSITORY}" >&2
      continue
    fi
  fi

  # Skip if exists in local
  if [ -e "$BATCHREPOS_WORKING_DIRECTORY/$REPOSITORY" ]; then
    echo "[WARN] Already exists: $BATCHREPOS_WORKING_DIRECTORY/$REPOSITORY" >&2
    continue
  fi

  echo -e "Repository: \033[0;31m${REPOSITORY}\033[0m" >&2
  git clone "${GITHUB_REPOSITORY_BASE_URI}:${BATCHREPOS_CLONE_ORGANIZATION}/${REPOSITORY}.git" ${BATCHREPOS_WORKING_DIRECTORY}/${REPOSITORY}

  echo "$REPOSITORY" >> $REPOSITORY_IGNORE_FILE
done <<EOS
$REPOSITORY_LIST
EOS

if [ -n "$BATCHREPOS_HTTP_PROXY" ]l then
  git config --global --unset http.proxy "$BATCHREPOS_HTTP_PROXY"
fi
