#!/usr/bin/env bash
# Usage: batchrepos exec [BATCHREPOS_WORKING_DIRECTORY] -c "COMMAND [ARGS]"
# Summary: Execute command in all of the git repositories
# Help: 

set -eu

LIBDIR="$(realpath "$(dirname $0)/../lib/bash")"
# shellcheck source=/lib/bash/functions
. $LIBDIR/functions
# shellcheck source=/lib/bash/logger
. $LIBDIR/logger

# Load configuration file
: ${BATCHREPOS_RESOURCE_FILE:="$HOME/.batchreposrc"}
if [ -f "$BATCHREPOS_RESOURCE_FILE" ]; then
  # shellcheck source=$HOME/.repository-batch.rc
  source $BATCHREPOS_RESOURCE_FILE
fi

# Set default values
: ${BATCHREPOS_WORKING_DIRECTORY:="$(pwd)"}
: ${STDIN_CMD:=""}
: ${ARGS_CMD:=""}
: ${EXEC_FILE:=""}

# Get command line options  q q
while getopts c:f: OPT; do
  case $OPT in
    c)
      ARGS_CMD="$OPTARG"
    f)
      EXEC_FILE=$(realpath "$OPTARG")
      ;;
  esac
done
shift $((OPTIND - 1))

# Get the path of working directory
if [ $# -ge 1 ]; then
  BATCHREPOS_WORKING_DIRECTORY=$1
fi
if [ ! -d "$BATCHREPOS_WORKING_DIRECTORY" ]; then
  logger.error "Directory NOT exists: ${BATCHREPOS_WORKING_DIRECTORY}"
  exit 1
fi
BATCHREPOS_WORKING_DIRECTORY=$(realpath $BATCHREPOS_WORKING_DIRECTORY)

if [ -p /dev/stdin ]; then
  STDIN_CMD=$(cat -)
fi

while read REPOSITORY; do
  REPOSITORY=$(dirname $REPOSITORY)
  cd $REPOSITORY
  logger.info "Repository: $REPOSITORY"

  if [ -n "$STDIN_CMD" ]; then
    echo -e "$STDIN_CMD" | while read; do
      $REPLY
    done
  fi
  if [ -n "$ARGS_CMD" ]; then
    $ARGS_CMD
  fi
  if [ -f $EXEC_FILE ]; then
    sh $EXEC_FILE
  fi
done <<EOS
$(find $BATCHREPOS_WORKING_DIRECTORY -name "vendor" -type d -prune -o -type d -name ".git" -print)
EOS
