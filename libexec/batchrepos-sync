#!/usr/bin/env bash
# Usage: batchrepos sync [BATCHREPOS_SYNC_SRC_PATH BATCHREPOS_SYNC_DST_HOST BATCHREPOS_SYNC_DST_PATH]
# Summary: Sync all files of the git repositories
# Help: 

set -eu

# Load libraries
LIBDIR="$(realpath "$(dirname $0)/../lib/bash")"
# shellcheck source=/lib/bash/functions
. $LIBDIR/functions
# shellcheck source=/lib/bash/logger
. $LIBDIR/logger

# Load configuration file
: ${BATCHREPOS_RESOURCE_FILE:="$HOME/.batchreposrc"}
if [ -f "$BATCHREPOS_RESOURCE_FILE" ]; then
  logger.debug "Load configuration file"
  # shellcheck source=$HOME/.batchreposrc
  source $BATCHREPOS_RESOURCE_FILE
fi

: ${BATCHREPOS_SYNC_SRC_PATH:=""}
: ${BATCHREPOS_SYNC_DST_HOST:=""}
: ${BATCHREPOS_SYNC_DST_PATH:=""}

if [ $# -ge 3 ]; then
  logger.debug "Parameters given"
  BATCHREPOS_SYNC_SRC_PATH="$1"
  BATCHREPOS_SYNC_DST_HOST="$2"
  BATCHREPOS_SYNC_DST_PATH="$3"
elif [ -z $BATCHREPOS_SYNC_SRC_PATH ] || [ -z $BATCHREPOS_SYNC_DST_HOST ] || [ -z $BATCHREPOS_SYNC_DST_PATH ]; then
  logger.error "Parameters NOT enough"
  exit 1
fi

# リモートの対象ディレクトリに存在するファイルのリストを取得する
REPOSITORY_LIST="$(ssh $BATCHREPOS_SYNC_DST_HOST "cd $BATCHREPOS_SYNC_DST_PATH; ls -1")"

# ローカルの対象ディレクトリに存在するディレクトリをリストする
cd $BATCHREPOS_SYNC_SRC_PATH
ls -1 | while read REPOSITORY; do
  if echo -e "$REPOSITORY_LIST" | grep -qw $REPOSITORY; then
    logger.info "$REPOSITORY"
    cd $BATCHREPOS_SYNC_SRC_PATH/$REPOSITORY
    git push --all
    ssh -n $BATCHREPOS_SYNC_DST_HOST "cd $BATCHREPOS_SYNC_DST_PATH/$REPOSITORY; git pull --all"
    rsync -avz --exclude=".git" ./ $BATCHREPOS_SYNC_DST_HOST:$BATCHREPOS_SYNC_DST_PATH/$REPOSITORY
  else
    logger.debug "$REPOSITORY"
  fi
done
